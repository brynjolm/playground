#!/bin/bash

# Function to post status
post_status() {
    if [ $1 -eq 0 ]; then
        echo "Success: $2"
    else
        echo "Failure: $2"
    fi
}

# Delete /etc/hostname and /etc/hosts to allow recreation
rm -f /etc/hostname
post_status $? "Deleting /etc/hostname"
rm -f /etc/hosts
post_status $? "Deleting /etc/hosts"

# Delete SSH host keys
rm -v /etc/ssh/ssh_host_*

# Reconfigure openssh-server
dpkg-reconfigure openssh-server
post_status $? "openssh-server configuration"

# Update package list
apt update
post_status $? "Package list update"

# Upgrade packages
apt upgrade -y
post_status $? "Package upgrade"

# Install required packages
apt install -y nano git qemu-guest-agent wget curl samba nfs-kernel-server cifs-utils ca-certificates gnupg
post_status $? "Package installation"

# Pause to allow NetworkManager to apply its configuration
sleep 5

# Remove domain and search sections from /etc/resolv.conf
sed -i '/^domain/d' /etc/resolv.conf
sed -i '/^search/d' /etc/resolv.conf
post_status $? "Removing domain and search from /etc/resolv.conf"

# Set /etc/resolv.conf to have a nameserver of 192.168.200.1
echo "nameserver 192.168.200.1" > /etc/resolv.conf
post_status $? "Updating /etc/resolv.conf"

# Set timesyncd to use NTP server and Europe/Berlin timezone
echo "NTP=192.168.200.1" >> /etc/systemd/timesyncd.conf
timedatectl set-timezone Europe/Berlin
post_status $? "timesyncd configuration"

# Enable and start timesyncd service
systemctl enable systemd-timesyncd
systemctl start systemd-timesyncd

# Restart networking using NetworkManager to regenerate /etc/hosts
nmcli networking off
nmcli networking on
post_status $? "Restarting networking service to regenerate /etc/hosts using NetworkManager"

# Set the DHCP hostname as the system hostname
hostnamectl set-hostname "$HOSTNAME"
post_status $? "Setting hostname to $HOSTNAME"

# Recreate /etc/hostname with the DHCP hostname
echo "$HOSTNAME" > /etc/hostname
post_status $? "Creating /etc/hostname"

# Recreate /etc/hosts with necessary entries
cat <<EOF > /etc/hosts
127.0.0.1 localhost $HOSTNAME
# The following lines are desirable for IPv6 capable hosts
::1 localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
post_status $? "Creating /etc/hosts"

# Reboot the server
echo "Rebooting the system..."
reboot
